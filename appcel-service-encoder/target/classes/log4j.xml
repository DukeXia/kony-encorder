<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration debug="true"
	xmlns:log4j='http://jakarta.apache.org/log4j/'>

	<!-- ========================== 自定义输出格式说明================================ -->
	<!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
	<!-- %r 输出自应用启动到输出该log信息耗费的毫秒数 -->
	<!-- %c 输出所属的类目，通常就是所在类的全名 -->
	<!-- %t 输出产生该日志事件的线程名 -->
	<!-- %n 输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n” -->
	<!-- %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2014年03月18日 
		22：10：28，921 -->
	<!-- %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlo4.main(TestLog4.java:10) -->
	<!-- ========================================================================== -->

	<!-- ========================== 输出方式说明================================ -->
	<!-- Log4j提供的appender有以下几种: -->
	<!-- org.apache.log4j.ConsoleAppender(控制台) -->
	<!-- org.apache.log4j.FileAppender(文件) -->
	<!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件) -->
	<!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件) -->
	<!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方) -->
	<!-- ========================================================================== -->
	<!-- 输出到控制台配置 -->
	<appender name="appcel-console" class="org.apache.log4j.ConsoleAppender">
		<!-- 指定日志消息的输出最低层次级别 -->
		<param name="Threshold" value="info" />
		<!-- <param name="Append" value="true"/> -->
		<!-- <param name="Target" value="System.out"/> -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern"
				value="%d{yyyy-MM-dd HH:mm:ss a} [Thread: %t][ Class:%c  Method: %l ]%n%p:%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="INFO" />
			<param name="LevelMax" value="ERROR" />
		</filter>
	</appender>

	<!-- 不同級別输出日志到不同文件 debug 每天一个文件 -->
	<!-- <appender name="appcel-debug" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="Threshold" value="debug" />
		<param name="ImmediateFlush" value="true" />
		<param name="File" value="./logs/appcel-debug.log" />
		<param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="DEBUG" />
			<param name="LevelMax" value="DEBUG" />
		</filter>
	</appender> -->

	<!-- 不同級別输出日志到不同文件 info 每天一个文件 -->
	<appender name="appcel-info" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="Threshold" value="debug" />
		<param name="ImmediateFlush" value="true" />
		<param name="File" value="./logs/appcel-info.log" />
		<param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="debug" />
			<param name="LevelMax" value="INFO" />
		</filter>
	</appender>

	<!-- 不同級別输出日志到不同文件 warn 每天一个文件 -->
	<appender name="appcel-warn" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="Threshold" value="warn" />
		<param name="ImmediateFlush" value="true" />
		<param name="File" value="./logs/appcel-warn.log" />
		<param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="WARN" />
			<param name="LevelMax" value="WARN" />
		</filter>
	</appender>

	<!-- 不同級別输出日志到不同文件 error 每天一个文件 -->
	<appender name="appcel-error" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="Threshold" value="error" />
		<param name="ImmediateFlush" value="true" />
		<param name="File" value="./logs/appcel-error.log" />
		<param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n" />
		</layout>
	</appender>

	<!-- 不同級別输出日志到不同文件 fatal 每天一个文件 -->
	<appender name="appcel-fatal" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="Threshold" value="fatal" />
		<param name="ImmediateFlush" value="true" />
		<param name="File" value="./logs/appcel-fatal.log" />
		<param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n" />
		</layout>
	</appender>

	<appender name="appcel-mail" class="org.apache.log4j.net.SMTPAppender">
		<param name="threshold" value="info" />
		<!-- 日志的错误级别 <param name="threshold" value="error"/> -->
		<!-- 缓存文件大小，日志达到512K时发送Email -->
		<param name="BufferSize" value="512" /><!-- 单位K -->
		<param name="From" value="test@163.com" />
		<param name="SMTPHost" value="smtp.163.com" />
		<param name="Subject" value="rock-log4j-message" />
		<param name="To" value="rock@163.com" />
		<param name="SMTPUsername" value="test" />
		<param name="SMTPPassword" value="test" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss.SSS a} [%p]-[%c] %m%n" />
		</layout>
	</appender>

	<logger name="com.ibatis">
		<level value="debug" />
	</logger>
	<logger name="com.ibatis.common.jdbc.SimpleDataSource">
		<level value="debug" />
	</logger>
	<logger name="com.ibatis.common.jdbc.ScriptRunner">
		<level value="debug" />
	</logger>
	<logger name="com.ibatis.common.jdbc.SqlMapClientDelegate">
		<level value="debug" />
	</logger>
	<logger name="java.sql.Connection">
		<level value="debug" />
	</logger>
	<logger name="java.sql.Statement">
		<level value="debug" />
	</logger>
	<logger name="java.sql.PreparedStatement">
		<level value="debug" />
	</logger>
	<logger name="java.sql.ResultSet">
		<level value="debug" />
	</logger>
	<logger name="org.springframework">
		<level value="debug" />
	</logger>
	<logger name="org.apache.zookeeper">
		<level value="debug" />
	</logger>
	<!-- 定义全局的日志输出级别,但是在输出目的地的配置中配置的具体输出级别优先级高于全局定义的优先级。 如果在输出目的地中定义<param name="Threshold" 
		value="info" />，那么将会把info以上级别的信息输出 -->
	<root>
		<priority value="debug" />
		<appender-ref ref="appcel-console" />
		<appender-ref ref="appcel-debug" />
		<appender-ref ref="appcel-info" />
		<appender-ref ref="appcel-warn" />
		<appender-ref ref="appcel-error" />
		<appender-ref ref="appcel-fatal" />
		<!-- <appender-ref ref="appcel-mail" /> -->
	</root>
</log4j:configuration>